{"version":3,"sources":["components/Layout/Page.tsx","components/Loader/PageLoader.tsx","components/SuspenseWithChunkError/index.tsx","routerHistory.ts","App.tsx","index.tsx"],"names":["Page","Wrapper","styled","PageLoader","SuspenseWithChunkError","props","state","hasError","error","isJsChunkLoadError","name","isCssChunkLoadError","code","isChunkLoadError","isRecoveringFromChunkError","window","history","nextState","replaceState","location","reload","this","fallback","React","Component","createBrowserHistory","Home","lazy","App","path","exact","memo","ReactDOM","render","document","getElementById"],"mappings":"kMAQeA,EANQ,WACrB,OACE,wCCAEC,EAAUC,YAAOF,EAAPE,CAAH,kGAcEC,EARc,WAC3B,OACE,cAACF,EAAD,yB,wCCqCWG,E,kDA1Cb,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IACDC,MAAQ,CAAEC,UAAU,GAFH,E,qDAUxB,SAAkBC,GAAa,IAAD,EACtBC,EAAoC,mBAAfD,EAAME,KAC3BC,EAAqC,0BAAfH,EAAMI,KAC5BC,EAAmBJ,GAAsBE,EAIzCG,IAA8B,UAACC,OAAOC,QAAQV,aAAhB,QAAC,EAAsBQ,4BAG3D,GAAID,IAAqBC,EAA4B,CACnD,IAAMG,EAAS,2BAAQF,OAAOC,QAAQV,OAAvB,IAA8BQ,4BAA4B,IAGzE,OAFAC,OAAOC,QAAQE,aAAaD,EAAW,SACvCF,OAAOI,SAASC,SAIlB,MAAMZ,I,oBAGR,WACE,IAAQD,EAAac,KAAKf,MAAlBC,SACAe,EAAaD,KAAKhB,MAAlBiB,SAER,OAAIf,EACKe,EAGF,cAAC,WAAD,eAAcD,KAAKhB,W,uCAjC5B,WAEE,MAAO,CAAEE,UAAU,O,GARcgB,IAAMC,W,OCD5BR,EAFCS,cCIVC,EAAOC,gBAAK,kBAAM,gCAElBC,EAAgB,WAClB,OACI,cAAC,IAAD,CAAQZ,QAASA,EAAjB,SACA,cAAC,EAAD,CAAwBM,SAAU,cAAC,EAAD,IAAlC,SACI,cAAC,IAAD,UACI,cAAC,IAAD,CAAOO,KAAK,IAAIC,OAAK,EAArB,SACI,cAACJ,EAAD,aASLH,MAAMQ,KAAKH,GCnB1BI,IAASC,OACP,cAAC,aAAD,UACM,cAAC,EAAD,MAENC,SAASC,eAAe,W","file":"static/js/main.84fd5d34.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Page: React.FC = () =>  {\r\n  return (\r\n    <div>Page</div>\r\n  )\r\n}\r\n\r\nexport default Page","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport Page from '../Layout/Page'\r\n\r\nconst Wrapper = styled(Page)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`\r\n\r\nconst PageLoader: React.FC = () => {\r\n  return (\r\n    <Wrapper>\r\n      Loader...\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PageLoader\r\n","import React, { Suspense, SuspenseProps } from 'react'\r\n\r\ninterface State {\r\n  hasError: boolean\r\n}\r\n\r\nclass SuspenseWithChunkError extends React.Component<SuspenseProps, State> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = { hasError: false }\r\n  }\r\n\r\n  static getDerivedStateFromError() {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error: any) {\r\n    const isJsChunkLoadError = error.name === 'ChunkLoadError'\r\n    const isCssChunkLoadError = error.code === 'CSS_CHUNK_LOAD_FAILED'\r\n    const isChunkLoadError = isJsChunkLoadError || isCssChunkLoadError\r\n\r\n    // Save a flag on the window object indicating that we have already had a chunk error.\r\n    // This prevents infinite reloads\r\n    const isRecoveringFromChunkError = !!window.history.state?.isRecoveringFromChunkError\r\n\r\n    // If was a chunk load error, refresh the page\r\n    if (isChunkLoadError && !isRecoveringFromChunkError) {\r\n      const nextState = { ...window.history.state, isRecoveringFromChunkError: true }\r\n      window.history.replaceState(nextState, '')\r\n      window.location.reload()\r\n      return\r\n    }\r\n\r\n    throw error\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state\r\n    const { fallback } = this.props\r\n\r\n    if (hasError) {\r\n      return fallback\r\n    }\r\n\r\n    return <Suspense {...this.props} />\r\n  }\r\n}\r\n\r\nexport default SuspenseWithChunkError\r\n","import { createBrowserHistory } from 'history'\r\n\r\n// Manually create the history object so we can access outside the Router e.g. in modals\r\nconst history = createBrowserHistory()\r\n\r\nexport default history\r\n","import React, { lazy } from 'react'\r\nimport { Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport PageLoader from './components/Loader/PageLoader'\r\nimport SuspenseWithChunkError from './components/SuspenseWithChunkError'\r\nimport history from './routerHistory'\r\n\r\n// Route-based code splitting\r\nconst Home = lazy(() => import('./views/Home'))\r\n\r\nconst App: React.FC = () => {\r\n    return (\r\n        <Router history={history}>\r\n        <SuspenseWithChunkError fallback={<PageLoader />}>\r\n            <Switch>\r\n                <Route path=\"/\" exact>\r\n                    <Home />\r\n                </Route>\r\n            </Switch>\r\n        </SuspenseWithChunkError>\r\n        </Router>\r\n    )\r\n\r\n}\r\n\r\nexport default React.memo(App)\r\n","import React, { StrictMode } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\nReactDOM.render(\r\n  <StrictMode>\r\n        <App />\r\n  </StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n"],"sourceRoot":""}